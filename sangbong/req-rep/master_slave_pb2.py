# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: master_slave.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='master_slave.proto',
  package='',
  syntax='proto3',
  serialized_pb=_b('\n\x12master_slave.proto\"\x0b\n\tHeartBeat\"\\\n\rSlaveRegister\x12\x12\n\nis_request\x18\x01 \x01(\x08\x12\x17\n\x06status\x18\x02 \x01(\x0e\x32\x07.Status\x12\x1e\n\nerror_code\x18\x03 \x01(\x0e\x32\n.ErrorCode\"\x8a\x04\n\x0cTaskRegister\x12\x44\n\x17result_receiver_address\x18\x01 \x01(\x0b\x32#.TaskRegister.ResultReceiverAddress\x12\x12\n\ntask_token\x18\x02 \x01(\x0c\x12-\n\nsleep_task\x18\n \x01(\x0b\x32\x17.TaskRegister.SleepTaskH\x00\x12H\n\x18tensorflow_learning_task\x18\x0b \x01(\x0b\x32$.TaskRegister.TensorflowLearningTaskH\x00\x12@\n\x14tensorflow_test_task\x18\x0c \x01(\x0b\x32 .TaskRegister.TensorflowTestTaskH\x00\x1a\x8e\x01\n\x15ResultReceiverAddress\x12@\n\x04type\x18\x01 \x01(\x0e\x32\x32.TaskRegister.ResultReceiverAddress.ConnectionType\x12\n\n\x02ip\x18\x02 \x01(\t\x12\x0c\n\x04port\x18\x03 \x01(\x05\"\x19\n\x0e\x43onnectionType\x12\x07\n\x03TCP\x10\x00\x1a\x1c\n\tSleepTask\x12\x0f\n\x07seconds\x18\x01 \x01(\x05\x1a\x18\n\x16TensorflowLearningTask\x1a\x14\n\x12TensorflowTestTaskB\x06\n\x04task\"\x85\x01\n\x07Message\x12 \n\nheart_beat\x18\x01 \x01(\x0b\x32\n.HeartBeatH\x00\x12(\n\x0eslave_register\x18\x02 \x01(\x0b\x32\x0e.SlaveRegisterH\x00\x12&\n\rtask_register\x18\x03 \x01(\x0b\x32\r.TaskRegisterH\x00\x42\x06\n\x04\x62ody*\x1f\n\x06Status\x12\x0b\n\x07SUCCESS\x10\x00\x12\x08\n\x04\x46\x41IL\x10\x01*\x18\n\tErrorCode\x12\x0b\n\x07UNKNOWN\x10\x00\x62\x06proto3')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

_STATUS = _descriptor.EnumDescriptor(
  name='Status',
  full_name='Status',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='SUCCESS', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FAIL', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=790,
  serialized_end=821,
)
_sym_db.RegisterEnumDescriptor(_STATUS)

Status = enum_type_wrapper.EnumTypeWrapper(_STATUS)
_ERRORCODE = _descriptor.EnumDescriptor(
  name='ErrorCode',
  full_name='ErrorCode',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN', index=0, number=0,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=823,
  serialized_end=847,
)
_sym_db.RegisterEnumDescriptor(_ERRORCODE)

ErrorCode = enum_type_wrapper.EnumTypeWrapper(_ERRORCODE)
SUCCESS = 0
FAIL = 1
UNKNOWN = 0


_TASKREGISTER_RESULTRECEIVERADDRESS_CONNECTIONTYPE = _descriptor.EnumDescriptor(
  name='ConnectionType',
  full_name='TaskRegister.ResultReceiverAddress.ConnectionType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='TCP', index=0, number=0,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=541,
  serialized_end=566,
)
_sym_db.RegisterEnumDescriptor(_TASKREGISTER_RESULTRECEIVERADDRESS_CONNECTIONTYPE)


_HEARTBEAT = _descriptor.Descriptor(
  name='HeartBeat',
  full_name='HeartBeat',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=22,
  serialized_end=33,
)


_SLAVEREGISTER = _descriptor.Descriptor(
  name='SlaveRegister',
  full_name='SlaveRegister',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='is_request', full_name='SlaveRegister.is_request', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='status', full_name='SlaveRegister.status', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='error_code', full_name='SlaveRegister.error_code', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=35,
  serialized_end=127,
)


_TASKREGISTER_RESULTRECEIVERADDRESS = _descriptor.Descriptor(
  name='ResultReceiverAddress',
  full_name='TaskRegister.ResultReceiverAddress',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='TaskRegister.ResultReceiverAddress.type', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ip', full_name='TaskRegister.ResultReceiverAddress.ip', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='port', full_name='TaskRegister.ResultReceiverAddress.port', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _TASKREGISTER_RESULTRECEIVERADDRESS_CONNECTIONTYPE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=424,
  serialized_end=566,
)

_TASKREGISTER_SLEEPTASK = _descriptor.Descriptor(
  name='SleepTask',
  full_name='TaskRegister.SleepTask',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='seconds', full_name='TaskRegister.SleepTask.seconds', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=568,
  serialized_end=596,
)

_TASKREGISTER_TENSORFLOWLEARNINGTASK = _descriptor.Descriptor(
  name='TensorflowLearningTask',
  full_name='TaskRegister.TensorflowLearningTask',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=598,
  serialized_end=622,
)

_TASKREGISTER_TENSORFLOWTESTTASK = _descriptor.Descriptor(
  name='TensorflowTestTask',
  full_name='TaskRegister.TensorflowTestTask',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=624,
  serialized_end=644,
)

_TASKREGISTER = _descriptor.Descriptor(
  name='TaskRegister',
  full_name='TaskRegister',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='result_receiver_address', full_name='TaskRegister.result_receiver_address', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='task_token', full_name='TaskRegister.task_token', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sleep_task', full_name='TaskRegister.sleep_task', index=2,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tensorflow_learning_task', full_name='TaskRegister.tensorflow_learning_task', index=3,
      number=11, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tensorflow_test_task', full_name='TaskRegister.tensorflow_test_task', index=4,
      number=12, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_TASKREGISTER_RESULTRECEIVERADDRESS, _TASKREGISTER_SLEEPTASK, _TASKREGISTER_TENSORFLOWLEARNINGTASK, _TASKREGISTER_TENSORFLOWTESTTASK, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='task', full_name='TaskRegister.task',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=130,
  serialized_end=652,
)


_MESSAGE = _descriptor.Descriptor(
  name='Message',
  full_name='Message',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='heart_beat', full_name='Message.heart_beat', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='slave_register', full_name='Message.slave_register', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='task_register', full_name='Message.task_register', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='body', full_name='Message.body',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=655,
  serialized_end=788,
)

_SLAVEREGISTER.fields_by_name['status'].enum_type = _STATUS
_SLAVEREGISTER.fields_by_name['error_code'].enum_type = _ERRORCODE
_TASKREGISTER_RESULTRECEIVERADDRESS.fields_by_name['type'].enum_type = _TASKREGISTER_RESULTRECEIVERADDRESS_CONNECTIONTYPE
_TASKREGISTER_RESULTRECEIVERADDRESS.containing_type = _TASKREGISTER
_TASKREGISTER_RESULTRECEIVERADDRESS_CONNECTIONTYPE.containing_type = _TASKREGISTER_RESULTRECEIVERADDRESS
_TASKREGISTER_SLEEPTASK.containing_type = _TASKREGISTER
_TASKREGISTER_TENSORFLOWLEARNINGTASK.containing_type = _TASKREGISTER
_TASKREGISTER_TENSORFLOWTESTTASK.containing_type = _TASKREGISTER
_TASKREGISTER.fields_by_name['result_receiver_address'].message_type = _TASKREGISTER_RESULTRECEIVERADDRESS
_TASKREGISTER.fields_by_name['sleep_task'].message_type = _TASKREGISTER_SLEEPTASK
_TASKREGISTER.fields_by_name['tensorflow_learning_task'].message_type = _TASKREGISTER_TENSORFLOWLEARNINGTASK
_TASKREGISTER.fields_by_name['tensorflow_test_task'].message_type = _TASKREGISTER_TENSORFLOWTESTTASK
_TASKREGISTER.oneofs_by_name['task'].fields.append(
  _TASKREGISTER.fields_by_name['sleep_task'])
_TASKREGISTER.fields_by_name['sleep_task'].containing_oneof = _TASKREGISTER.oneofs_by_name['task']
_TASKREGISTER.oneofs_by_name['task'].fields.append(
  _TASKREGISTER.fields_by_name['tensorflow_learning_task'])
_TASKREGISTER.fields_by_name['tensorflow_learning_task'].containing_oneof = _TASKREGISTER.oneofs_by_name['task']
_TASKREGISTER.oneofs_by_name['task'].fields.append(
  _TASKREGISTER.fields_by_name['tensorflow_test_task'])
_TASKREGISTER.fields_by_name['tensorflow_test_task'].containing_oneof = _TASKREGISTER.oneofs_by_name['task']
_MESSAGE.fields_by_name['heart_beat'].message_type = _HEARTBEAT
_MESSAGE.fields_by_name['slave_register'].message_type = _SLAVEREGISTER
_MESSAGE.fields_by_name['task_register'].message_type = _TASKREGISTER
_MESSAGE.oneofs_by_name['body'].fields.append(
  _MESSAGE.fields_by_name['heart_beat'])
_MESSAGE.fields_by_name['heart_beat'].containing_oneof = _MESSAGE.oneofs_by_name['body']
_MESSAGE.oneofs_by_name['body'].fields.append(
  _MESSAGE.fields_by_name['slave_register'])
_MESSAGE.fields_by_name['slave_register'].containing_oneof = _MESSAGE.oneofs_by_name['body']
_MESSAGE.oneofs_by_name['body'].fields.append(
  _MESSAGE.fields_by_name['task_register'])
_MESSAGE.fields_by_name['task_register'].containing_oneof = _MESSAGE.oneofs_by_name['body']
DESCRIPTOR.message_types_by_name['HeartBeat'] = _HEARTBEAT
DESCRIPTOR.message_types_by_name['SlaveRegister'] = _SLAVEREGISTER
DESCRIPTOR.message_types_by_name['TaskRegister'] = _TASKREGISTER
DESCRIPTOR.message_types_by_name['Message'] = _MESSAGE
DESCRIPTOR.enum_types_by_name['Status'] = _STATUS
DESCRIPTOR.enum_types_by_name['ErrorCode'] = _ERRORCODE

HeartBeat = _reflection.GeneratedProtocolMessageType('HeartBeat', (_message.Message,), dict(
  DESCRIPTOR = _HEARTBEAT,
  __module__ = 'master_slave_pb2'
  # @@protoc_insertion_point(class_scope:HeartBeat)
  ))
_sym_db.RegisterMessage(HeartBeat)

SlaveRegister = _reflection.GeneratedProtocolMessageType('SlaveRegister', (_message.Message,), dict(
  DESCRIPTOR = _SLAVEREGISTER,
  __module__ = 'master_slave_pb2'
  # @@protoc_insertion_point(class_scope:SlaveRegister)
  ))
_sym_db.RegisterMessage(SlaveRegister)

TaskRegister = _reflection.GeneratedProtocolMessageType('TaskRegister', (_message.Message,), dict(

  ResultReceiverAddress = _reflection.GeneratedProtocolMessageType('ResultReceiverAddress', (_message.Message,), dict(
    DESCRIPTOR = _TASKREGISTER_RESULTRECEIVERADDRESS,
    __module__ = 'master_slave_pb2'
    # @@protoc_insertion_point(class_scope:TaskRegister.ResultReceiverAddress)
    ))
  ,

  SleepTask = _reflection.GeneratedProtocolMessageType('SleepTask', (_message.Message,), dict(
    DESCRIPTOR = _TASKREGISTER_SLEEPTASK,
    __module__ = 'master_slave_pb2'
    # @@protoc_insertion_point(class_scope:TaskRegister.SleepTask)
    ))
  ,

  TensorflowLearningTask = _reflection.GeneratedProtocolMessageType('TensorflowLearningTask', (_message.Message,), dict(
    DESCRIPTOR = _TASKREGISTER_TENSORFLOWLEARNINGTASK,
    __module__ = 'master_slave_pb2'
    # @@protoc_insertion_point(class_scope:TaskRegister.TensorflowLearningTask)
    ))
  ,

  TensorflowTestTask = _reflection.GeneratedProtocolMessageType('TensorflowTestTask', (_message.Message,), dict(
    DESCRIPTOR = _TASKREGISTER_TENSORFLOWTESTTASK,
    __module__ = 'master_slave_pb2'
    # @@protoc_insertion_point(class_scope:TaskRegister.TensorflowTestTask)
    ))
  ,
  DESCRIPTOR = _TASKREGISTER,
  __module__ = 'master_slave_pb2'
  # @@protoc_insertion_point(class_scope:TaskRegister)
  ))
_sym_db.RegisterMessage(TaskRegister)
_sym_db.RegisterMessage(TaskRegister.ResultReceiverAddress)
_sym_db.RegisterMessage(TaskRegister.SleepTask)
_sym_db.RegisterMessage(TaskRegister.TensorflowLearningTask)
_sym_db.RegisterMessage(TaskRegister.TensorflowTestTask)

Message = _reflection.GeneratedProtocolMessageType('Message', (_message.Message,), dict(
  DESCRIPTOR = _MESSAGE,
  __module__ = 'master_slave_pb2'
  # @@protoc_insertion_point(class_scope:Message)
  ))
_sym_db.RegisterMessage(Message)


# @@protoc_insertion_point(module_scope)
