# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: slave_worker.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='slave_worker.proto',
  package='',
  syntax='proto3',
  serialized_pb=_b('\n\x12slave_worker.proto\"\xc9\x03\n\x0fTaskRegisterCMD\x12G\n\x17result_receiver_address\x18\x01 \x01(\x0b\x32&.TaskRegisterCMD.ResultReceiverAddress\x12\x12\n\ntask_token\x18\x02 \x01(\x0c\x12\x30\n\nsleep_task\x18\n \x01(\x0b\x32\x1a.TaskRegisterCMD.SleepTaskH\x00\x12K\n\x18tensorflow_learning_task\x18\x0b \x01(\x0b\x32\'.TaskRegisterCMD.TensorflowLearningTaskH\x00\x12\x43\n\x14tensorflow_test_task\x18\x0c \x01(\x0b\x32#.TaskRegisterCMD.TensorflowTestTaskH\x00\x1a?\n\x15ResultReceiverAddress\x12\x0c\n\x04type\x18\x01 \x01(\t\x12\n\n\x02ip\x18\x02 \x01(\t\x12\x0c\n\x04port\x18\x03 \x01(\x05\x1a\x1c\n\tSleepTask\x12\x0f\n\x07seconds\x18\x01 \x01(\x05\x1a\x18\n\x16TensorflowLearningTask\x1a\x14\n\x12TensorflowTestTaskB\x06\n\x04task\"+\n\x15WorkerRegisterRequest\x12\x12\n\ntask_token\x18\x01 \x01(\x0c\"<\n\x16WorkerRegisterResponse\x12\x0e\n\x06status\x18\x01 \x01(\t\x12\x12\n\nerror_code\x18\x02 \x01(\t\"\'\n\x11TaskCancelRequest\x12\x12\n\ntask_token\x18\x01 \x01(\x0c\"L\n\x12TaskCancelResponse\x12\x0e\n\x06status\x18\x01 \x01(\t\x12\x12\n\nerror_code\x18\x02 \x01(\t\x12\x12\n\ntask_token\x18\x03 \x01(\x0c\"\'\n\x11TaskFinishRequest\x12\x12\n\ntask_token\x18\x01 \x01(\x0c\"L\n\x12TaskFinishResponse\x12\x0e\n\x06status\x18\x01 \x01(\t\x12\x12\n\nerror_code\x18\x02 \x01(\t\x12\x12\n\ntask_token\x18\x03 \x01(\x0c\"\xed\x02\n\x07Message\x12-\n\x11task_register_cmd\x18\x01 \x01(\x0b\x32\x10.TaskRegisterCMDH\x00\x12\x35\n\x13worker_register_req\x18\x02 \x01(\x0b\x32\x16.WorkerRegisterRequestH\x00\x12\x36\n\x13worker_register_res\x18\x03 \x01(\x0b\x32\x17.WorkerRegisterResponseH\x00\x12-\n\x0ftask_cancel_req\x18\x04 \x01(\x0b\x32\x12.TaskCancelRequestH\x00\x12.\n\x0ftask_cancel_res\x18\x05 \x01(\x0b\x32\x13.TaskCancelResponseH\x00\x12-\n\x0ftask_finish_req\x18\x06 \x01(\x0b\x32\x12.TaskFinishRequestH\x00\x12.\n\x0ftask_finish_res\x18\x07 \x01(\x0b\x32\x13.TaskFinishResponseH\x00\x42\x06\n\x04\x62odyb\x06proto3')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_TASKREGISTERCMD_RESULTRECEIVERADDRESS = _descriptor.Descriptor(
  name='ResultReceiverAddress',
  full_name='TaskRegisterCMD.ResultReceiverAddress',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='TaskRegisterCMD.ResultReceiverAddress.type', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ip', full_name='TaskRegisterCMD.ResultReceiverAddress.ip', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='port', full_name='TaskRegisterCMD.ResultReceiverAddress.port', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=331,
  serialized_end=394,
)

_TASKREGISTERCMD_SLEEPTASK = _descriptor.Descriptor(
  name='SleepTask',
  full_name='TaskRegisterCMD.SleepTask',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='seconds', full_name='TaskRegisterCMD.SleepTask.seconds', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=396,
  serialized_end=424,
)

_TASKREGISTERCMD_TENSORFLOWLEARNINGTASK = _descriptor.Descriptor(
  name='TensorflowLearningTask',
  full_name='TaskRegisterCMD.TensorflowLearningTask',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=426,
  serialized_end=450,
)

_TASKREGISTERCMD_TENSORFLOWTESTTASK = _descriptor.Descriptor(
  name='TensorflowTestTask',
  full_name='TaskRegisterCMD.TensorflowTestTask',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=452,
  serialized_end=472,
)

_TASKREGISTERCMD = _descriptor.Descriptor(
  name='TaskRegisterCMD',
  full_name='TaskRegisterCMD',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='result_receiver_address', full_name='TaskRegisterCMD.result_receiver_address', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='task_token', full_name='TaskRegisterCMD.task_token', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sleep_task', full_name='TaskRegisterCMD.sleep_task', index=2,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tensorflow_learning_task', full_name='TaskRegisterCMD.tensorflow_learning_task', index=3,
      number=11, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tensorflow_test_task', full_name='TaskRegisterCMD.tensorflow_test_task', index=4,
      number=12, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_TASKREGISTERCMD_RESULTRECEIVERADDRESS, _TASKREGISTERCMD_SLEEPTASK, _TASKREGISTERCMD_TENSORFLOWLEARNINGTASK, _TASKREGISTERCMD_TENSORFLOWTESTTASK, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='task', full_name='TaskRegisterCMD.task',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=23,
  serialized_end=480,
)


_WORKERREGISTERREQUEST = _descriptor.Descriptor(
  name='WorkerRegisterRequest',
  full_name='WorkerRegisterRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='task_token', full_name='WorkerRegisterRequest.task_token', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=482,
  serialized_end=525,
)


_WORKERREGISTERRESPONSE = _descriptor.Descriptor(
  name='WorkerRegisterResponse',
  full_name='WorkerRegisterResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='WorkerRegisterResponse.status', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='error_code', full_name='WorkerRegisterResponse.error_code', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=527,
  serialized_end=587,
)


_TASKCANCELREQUEST = _descriptor.Descriptor(
  name='TaskCancelRequest',
  full_name='TaskCancelRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='task_token', full_name='TaskCancelRequest.task_token', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=589,
  serialized_end=628,
)


_TASKCANCELRESPONSE = _descriptor.Descriptor(
  name='TaskCancelResponse',
  full_name='TaskCancelResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='TaskCancelResponse.status', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='error_code', full_name='TaskCancelResponse.error_code', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='task_token', full_name='TaskCancelResponse.task_token', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=630,
  serialized_end=706,
)


_TASKFINISHREQUEST = _descriptor.Descriptor(
  name='TaskFinishRequest',
  full_name='TaskFinishRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='task_token', full_name='TaskFinishRequest.task_token', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=708,
  serialized_end=747,
)


_TASKFINISHRESPONSE = _descriptor.Descriptor(
  name='TaskFinishResponse',
  full_name='TaskFinishResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='TaskFinishResponse.status', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='error_code', full_name='TaskFinishResponse.error_code', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='task_token', full_name='TaskFinishResponse.task_token', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=749,
  serialized_end=825,
)


_MESSAGE = _descriptor.Descriptor(
  name='Message',
  full_name='Message',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='task_register_cmd', full_name='Message.task_register_cmd', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='worker_register_req', full_name='Message.worker_register_req', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='worker_register_res', full_name='Message.worker_register_res', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='task_cancel_req', full_name='Message.task_cancel_req', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='task_cancel_res', full_name='Message.task_cancel_res', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='task_finish_req', full_name='Message.task_finish_req', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='task_finish_res', full_name='Message.task_finish_res', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='body', full_name='Message.body',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=828,
  serialized_end=1193,
)

_TASKREGISTERCMD_RESULTRECEIVERADDRESS.containing_type = _TASKREGISTERCMD
_TASKREGISTERCMD_SLEEPTASK.containing_type = _TASKREGISTERCMD
_TASKREGISTERCMD_TENSORFLOWLEARNINGTASK.containing_type = _TASKREGISTERCMD
_TASKREGISTERCMD_TENSORFLOWTESTTASK.containing_type = _TASKREGISTERCMD
_TASKREGISTERCMD.fields_by_name['result_receiver_address'].message_type = _TASKREGISTERCMD_RESULTRECEIVERADDRESS
_TASKREGISTERCMD.fields_by_name['sleep_task'].message_type = _TASKREGISTERCMD_SLEEPTASK
_TASKREGISTERCMD.fields_by_name['tensorflow_learning_task'].message_type = _TASKREGISTERCMD_TENSORFLOWLEARNINGTASK
_TASKREGISTERCMD.fields_by_name['tensorflow_test_task'].message_type = _TASKREGISTERCMD_TENSORFLOWTESTTASK
_TASKREGISTERCMD.oneofs_by_name['task'].fields.append(
  _TASKREGISTERCMD.fields_by_name['sleep_task'])
_TASKREGISTERCMD.fields_by_name['sleep_task'].containing_oneof = _TASKREGISTERCMD.oneofs_by_name['task']
_TASKREGISTERCMD.oneofs_by_name['task'].fields.append(
  _TASKREGISTERCMD.fields_by_name['tensorflow_learning_task'])
_TASKREGISTERCMD.fields_by_name['tensorflow_learning_task'].containing_oneof = _TASKREGISTERCMD.oneofs_by_name['task']
_TASKREGISTERCMD.oneofs_by_name['task'].fields.append(
  _TASKREGISTERCMD.fields_by_name['tensorflow_test_task'])
_TASKREGISTERCMD.fields_by_name['tensorflow_test_task'].containing_oneof = _TASKREGISTERCMD.oneofs_by_name['task']
_MESSAGE.fields_by_name['task_register_cmd'].message_type = _TASKREGISTERCMD
_MESSAGE.fields_by_name['worker_register_req'].message_type = _WORKERREGISTERREQUEST
_MESSAGE.fields_by_name['worker_register_res'].message_type = _WORKERREGISTERRESPONSE
_MESSAGE.fields_by_name['task_cancel_req'].message_type = _TASKCANCELREQUEST
_MESSAGE.fields_by_name['task_cancel_res'].message_type = _TASKCANCELRESPONSE
_MESSAGE.fields_by_name['task_finish_req'].message_type = _TASKFINISHREQUEST
_MESSAGE.fields_by_name['task_finish_res'].message_type = _TASKFINISHRESPONSE
_MESSAGE.oneofs_by_name['body'].fields.append(
  _MESSAGE.fields_by_name['task_register_cmd'])
_MESSAGE.fields_by_name['task_register_cmd'].containing_oneof = _MESSAGE.oneofs_by_name['body']
_MESSAGE.oneofs_by_name['body'].fields.append(
  _MESSAGE.fields_by_name['worker_register_req'])
_MESSAGE.fields_by_name['worker_register_req'].containing_oneof = _MESSAGE.oneofs_by_name['body']
_MESSAGE.oneofs_by_name['body'].fields.append(
  _MESSAGE.fields_by_name['worker_register_res'])
_MESSAGE.fields_by_name['worker_register_res'].containing_oneof = _MESSAGE.oneofs_by_name['body']
_MESSAGE.oneofs_by_name['body'].fields.append(
  _MESSAGE.fields_by_name['task_cancel_req'])
_MESSAGE.fields_by_name['task_cancel_req'].containing_oneof = _MESSAGE.oneofs_by_name['body']
_MESSAGE.oneofs_by_name['body'].fields.append(
  _MESSAGE.fields_by_name['task_cancel_res'])
_MESSAGE.fields_by_name['task_cancel_res'].containing_oneof = _MESSAGE.oneofs_by_name['body']
_MESSAGE.oneofs_by_name['body'].fields.append(
  _MESSAGE.fields_by_name['task_finish_req'])
_MESSAGE.fields_by_name['task_finish_req'].containing_oneof = _MESSAGE.oneofs_by_name['body']
_MESSAGE.oneofs_by_name['body'].fields.append(
  _MESSAGE.fields_by_name['task_finish_res'])
_MESSAGE.fields_by_name['task_finish_res'].containing_oneof = _MESSAGE.oneofs_by_name['body']
DESCRIPTOR.message_types_by_name['TaskRegisterCMD'] = _TASKREGISTERCMD
DESCRIPTOR.message_types_by_name['WorkerRegisterRequest'] = _WORKERREGISTERREQUEST
DESCRIPTOR.message_types_by_name['WorkerRegisterResponse'] = _WORKERREGISTERRESPONSE
DESCRIPTOR.message_types_by_name['TaskCancelRequest'] = _TASKCANCELREQUEST
DESCRIPTOR.message_types_by_name['TaskCancelResponse'] = _TASKCANCELRESPONSE
DESCRIPTOR.message_types_by_name['TaskFinishRequest'] = _TASKFINISHREQUEST
DESCRIPTOR.message_types_by_name['TaskFinishResponse'] = _TASKFINISHRESPONSE
DESCRIPTOR.message_types_by_name['Message'] = _MESSAGE

TaskRegisterCMD = _reflection.GeneratedProtocolMessageType('TaskRegisterCMD', (_message.Message,), dict(

  ResultReceiverAddress = _reflection.GeneratedProtocolMessageType('ResultReceiverAddress', (_message.Message,), dict(
    DESCRIPTOR = _TASKREGISTERCMD_RESULTRECEIVERADDRESS,
    __module__ = 'slave_worker_pb2'
    # @@protoc_insertion_point(class_scope:TaskRegisterCMD.ResultReceiverAddress)
    ))
  ,

  SleepTask = _reflection.GeneratedProtocolMessageType('SleepTask', (_message.Message,), dict(
    DESCRIPTOR = _TASKREGISTERCMD_SLEEPTASK,
    __module__ = 'slave_worker_pb2'
    # @@protoc_insertion_point(class_scope:TaskRegisterCMD.SleepTask)
    ))
  ,

  TensorflowLearningTask = _reflection.GeneratedProtocolMessageType('TensorflowLearningTask', (_message.Message,), dict(
    DESCRIPTOR = _TASKREGISTERCMD_TENSORFLOWLEARNINGTASK,
    __module__ = 'slave_worker_pb2'
    # @@protoc_insertion_point(class_scope:TaskRegisterCMD.TensorflowLearningTask)
    ))
  ,

  TensorflowTestTask = _reflection.GeneratedProtocolMessageType('TensorflowTestTask', (_message.Message,), dict(
    DESCRIPTOR = _TASKREGISTERCMD_TENSORFLOWTESTTASK,
    __module__ = 'slave_worker_pb2'
    # @@protoc_insertion_point(class_scope:TaskRegisterCMD.TensorflowTestTask)
    ))
  ,
  DESCRIPTOR = _TASKREGISTERCMD,
  __module__ = 'slave_worker_pb2'
  # @@protoc_insertion_point(class_scope:TaskRegisterCMD)
  ))
_sym_db.RegisterMessage(TaskRegisterCMD)
_sym_db.RegisterMessage(TaskRegisterCMD.ResultReceiverAddress)
_sym_db.RegisterMessage(TaskRegisterCMD.SleepTask)
_sym_db.RegisterMessage(TaskRegisterCMD.TensorflowLearningTask)
_sym_db.RegisterMessage(TaskRegisterCMD.TensorflowTestTask)

WorkerRegisterRequest = _reflection.GeneratedProtocolMessageType('WorkerRegisterRequest', (_message.Message,), dict(
  DESCRIPTOR = _WORKERREGISTERREQUEST,
  __module__ = 'slave_worker_pb2'
  # @@protoc_insertion_point(class_scope:WorkerRegisterRequest)
  ))
_sym_db.RegisterMessage(WorkerRegisterRequest)

WorkerRegisterResponse = _reflection.GeneratedProtocolMessageType('WorkerRegisterResponse', (_message.Message,), dict(
  DESCRIPTOR = _WORKERREGISTERRESPONSE,
  __module__ = 'slave_worker_pb2'
  # @@protoc_insertion_point(class_scope:WorkerRegisterResponse)
  ))
_sym_db.RegisterMessage(WorkerRegisterResponse)

TaskCancelRequest = _reflection.GeneratedProtocolMessageType('TaskCancelRequest', (_message.Message,), dict(
  DESCRIPTOR = _TASKCANCELREQUEST,
  __module__ = 'slave_worker_pb2'
  # @@protoc_insertion_point(class_scope:TaskCancelRequest)
  ))
_sym_db.RegisterMessage(TaskCancelRequest)

TaskCancelResponse = _reflection.GeneratedProtocolMessageType('TaskCancelResponse', (_message.Message,), dict(
  DESCRIPTOR = _TASKCANCELRESPONSE,
  __module__ = 'slave_worker_pb2'
  # @@protoc_insertion_point(class_scope:TaskCancelResponse)
  ))
_sym_db.RegisterMessage(TaskCancelResponse)

TaskFinishRequest = _reflection.GeneratedProtocolMessageType('TaskFinishRequest', (_message.Message,), dict(
  DESCRIPTOR = _TASKFINISHREQUEST,
  __module__ = 'slave_worker_pb2'
  # @@protoc_insertion_point(class_scope:TaskFinishRequest)
  ))
_sym_db.RegisterMessage(TaskFinishRequest)

TaskFinishResponse = _reflection.GeneratedProtocolMessageType('TaskFinishResponse', (_message.Message,), dict(
  DESCRIPTOR = _TASKFINISHRESPONSE,
  __module__ = 'slave_worker_pb2'
  # @@protoc_insertion_point(class_scope:TaskFinishResponse)
  ))
_sym_db.RegisterMessage(TaskFinishResponse)

Message = _reflection.GeneratedProtocolMessageType('Message', (_message.Message,), dict(
  DESCRIPTOR = _MESSAGE,
  __module__ = 'slave_worker_pb2'
  # @@protoc_insertion_point(class_scope:Message)
  ))
_sym_db.RegisterMessage(Message)


# @@protoc_insertion_point(module_scope)
